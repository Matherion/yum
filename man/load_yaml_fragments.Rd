% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_yaml_fragments.R
\name{load_yaml_fragments}
\alias{load_yaml_fragments}
\title{Load all YAML fragments from a file}
\usage{
load_yaml_fragments(file, text, select = ".*",
  delimiterRegEx = "^---$", ignoreOddDelimiters = FALSE,
  encoding = "UTF-8", silent = TRUE)
}
\arguments{
\item{file}{The path to a file to scan; if provided, takes precedence
over \code{text}.}

\item{text}{A character vector to scan, where every element should
represent one line in the file; can be specified instead of \code{file}.}

\item{select}{A vector of regular expressions specifying object names
to retain. The default (\code{.*}) matches everything, so by default, all
objects are retained.}

\item{delimiterRegEx}{The regular expression used to locate YAML
fragments.}

\item{ignoreOddDelimiters}{Whether to throw an error (FALSE) or
delete the last delimiter (TRUE) if an odd number of delimiters is
encountered.}

\item{encoding}{The encoding to use when calling \code{\link[=readLines]{readLines()}}. Set to
NULL to let \code{\link[=readLines]{readLines()}} guess.}

\item{silent}{Whether to be silent (TRUE) or informative (FALSE).}
}
\value{
A list of objects.
}
\description{
These function extracts all YAML fragments from a file and then
calls \code{\link[yaml:yaml.load]{yaml::yaml.load()}} to parse them. It then returns a list
of the parsed fragments.
}
\examples{
yum::load_yaml_fragments(text=c(
"---",
"-",
"  id: firstFragment",
"---",
"Outside of YAML",
"---",
"-",
"  id: secondFragment",
"  parentId: firstFragment",
"---",
"Also outside of YAML"));

}
